"Full Class Name","Main Purpose/Target Site","Current Status","Key Dependencies","Extends"
"BaseScraper","Provides common base for other scrapers (abstract).","Core component, Active","LegalDocument, DocumentSource","None"
"BpkScraper","Scrapes legal documents from peraturan.bpk.go.id.","Active","DocumentSource, EnhancedDocumentScraper, LegalDocument","BaseScraper"
"EnhancedDocumentScraper","Provides enhanced scraping capabilities using various strategies (stealth, basic, mobile, selenium).","Active, core utility","external node and python3","None"
"ImprovedPeraturanScraper","Scrapes legal documents from peraturan.go.id using enhanced strategies.","Active, improved version","DocumentSource, EnhancedDocumentScraper, LegalDocument","BaseScraper"
"JdihPerpusnasApiScraper","Scrapes legal documents from JDIH Perpusnas via its API.","Active","LegalDocument, Carbon\Carbon","BaseScraper"
"KemenkoScraper","Scrapes legal documents from JDIH Kemenko (Kementerian Koordinator Bidang Perekonomian), focusing on digital economy policies.","Active","KemluTikScraper","KemluTikScraper"
"KomdigiScraper","Scrapes legal documents from JDIH Komdigi (Kementerian Komunikasi and Digital), focusing on IT and telecommunications regulations.","Active","KemluTikScraper","KemluTikScraper"
"MultiSourceLegalScraper","Orchestrates scraping from multiple legal document sources.","Active","EnhancedDocumentScraper, Illuminate\Support\Collection","None"
"ScraperFactory","Factory class for creating scraper instances and managing available scrapers.","Active, core utility","DocumentSource, BaseScraper, KemluTikScraper, JdihPerpusnasApiScraper, KomdigiScraper, KemenkoScraper, MultiSourceLegalScraper, BpkScraper, ImprovedPeraturanScraper, SessionAwarePeraturanScraper","None"
"SessionAwarePeraturanScraper","Scrapes peraturan.go.id while attempting to maintain a session.","Active","DocumentSource, LegalDocument","BaseScraper"
"TikEnhancedBpkScraper","Scrapes legal documents from peraturan.bpk.go.id with a focus on TIK relevance.","Active","DocumentSource, EnhancedDocumentScraper, TikTermsService, DocumentClassifierService, LegalDocument","BaseScraper"
"KemluTikScraper","Scrapes TIK-focused legal documents from jdih.kemlu.go.id, includes PDF text extraction.","Active, TIK-focused (with FIX comment)","LegalDocument","BaseScraper"
"","","","",""
"Artisan Commands Analysis","","","",""
"Command Signature","Scraper Class Used","Available Options/Flags","Purpose","Usage Type"
"documents:classify {--dry-run : Show classification results without saving} {--force : Re-classify documents that already have categories} {--type= : Only classify specific document types (uu,pp,perpres,permen)} {--tik-only : Only classify TIK-related documents} {--limit= : Limit number of documents to process} {--show-details : Show detailed classification reasoning} {--show-categories : Display available canonical categories and exit}","None directly (uses DocumentClassifierService)","--dry-run, --force, --type=, --tik-only, --limit=, --show-details, --show-categories","Classify legal documents into canonical categories using rule-based classification.","Both (testing/production)"
"documents:delete-low-tik-score {--dry-run : Show what would be deleted without actually deleting}","None directly (operates on LegalDocument)","--dry-run","Delete documents with a TIK relevance score of 0 or null.","Both (testing/production)"
"documents:bulk-normalize {--dry-run : Show what would be changed without saving} {--force : Force update for TIK scores}","None directly (calls other Artisan commands)","--dry-run, --force","Run all document normalization commands in sequence.","Both (testing/production)"
"documents:normalize-document-numbers {--dry-run : Show what would be changed without saving} {--force : Re-normalize all documents regardless of current format}","None directly (operates on LegalDocument)","--dry-run, --force","Normalize legal document numbers to a consistent format (e.g., ""X/YYYY"").","Both (testing/production)"
"documents:fix-tik-column-sync {--dry-run : Show what would be changed}","None directly (operates on LegalDocument)","--dry-run","Sync TIK data from metadata to top-level database columns.","Both (testing/production)"
"documents:normalize-columns {--dry-run : Show what would be changed without saving} {--force : Force normalization on all documents}","None directly (operates on LegalDocument)","--dry-run, --force","Normalize legal document column data and populate missing fields.","Both (testing/production)"
"documents:normalize-metadata {--dry-run : Show what would be changed without saving} {--force : Force normalization on all documents}","None directly (operates on LegalDocument)","--dry-run, --force","Normalize all legal document metadata to canonical structure and flatten complex fields.","Both (testing/production)"
"scraper:test-bpk {--limit=10 : Limit number of documents to scrape} {--search-only : Only test search functionality} {--dry-run : Test without saving to database} {--strategies=stealth,basic : Comma-separated strategies}","BpkScraper","--limit=, --search-only, --dry-run, --strategies=","Test the BPK scraper with peraturan.bpk.go.id.","Testing"
"scraper:test-kemlu {--limit=5 : Limit number of documents to scrape} {--tik-only : Only scrape TIK-related documents} {--dry-run : Test without saving to database}","KemluTikScraper","--limit=, --tik-only, --dry-run","Test the Kemlu JDIH scraper with jdih.kemlu.go.id.","Testing"
"scraper:test-tik-bpk {--limit=15 : Limit number of TIK documents to scrape} {--min-score=5 : Minimum TIK relevance score} {--search-only : Only test TIK search functionality} {--dry-run : Test without saving to database} {--show-keywords : Show TIK keywords found}","TikEnhancedBpkScraper","--limit=, --min-score=, --search-only, --dry-run, --show-keywords","Test the TIK-enhanced BPK scraper with peraturan.bpk.go.id.","Testing"
"legal-docs:scrape {--source=all : Specify a source to scrape (e.g., kemlu, komdigi, peraturan_go_id)} {--limit=50 : Limit the number of documents to scrape per source} {--test-mode : Run the scraper in test mode (limited documents)}","ScraperFactory (to create various scrapers)","--source=, --limit=, --test-mode","Unified command to scrape legal documents from various sources.","Both (testing/production)"
"documents:update-tik-scores {--dry-run : Show what would be changed without saving} {--force : Update even documents that already have scores}","None directly (uses TikTermsService)","--dry-run, --force","Update TIK relevance scores using enhanced Indonesian digital government terms.","Both (testing/production)"
"legal-docs:validate-config {--test-api : Test API connectivity}","None directly (tests configuration and API connectivity)","--test-api","Validate legal documents configuration and test connectivity.","Both (validation/debugging)"
"scraper:verify-database","None directly (checks database schema and document counts)","None","Check current database status and TIK documents.","Both (monitoring/debugging)"
"","","","",""
"ScraperFactory Analysis","","","",""
"Registered Scrapers","Mapped Class","File Exists","Factory Mapping Valid"
"peraturan_go_id","FixedPeraturanScraper","No","No"
"peraturan_go_id_session_aware","SessionAwarePeraturanScraper","Yes","Yes"
"peraturan_go_id_improved","ImprovedPeraturanScraper","Yes","Yes"
"bpk","BpkScraper","Yes","Yes"
"peraturan_bpk_go_id","BpkScraper","Yes","Yes"
"kemlu","KemluTikScraper","Yes","Yes"
"jdih_perpusnas_api","JdihPerpusnasApiScraper","Yes","Yes"
"komdigi","KomdigiScraper","Yes","Yes"
"kemenko","KemenkoScraper","Yes","Yes"
"multi_source","MultiSourceLegalScraper","Yes","Yes"
"","","",""
"Scrapers in files but not registered in Factory:","","",""
"TikEnhancedBpkScraper","","",""
"","","","",""
"Scraper Dependency Analysis","","","",""
"Scraper Class","External Services","Models Used","Configuration Required","HTTP Endpoints/APIs Called","Potential Issues"
"BpkScraper","EnhancedDocumentScraper","DocumentSource, LegalDocument","delay_min, delay_max, timeout, retries (for EnhancedDocumentScraper); request_delay, timeout, headers (from DocumentSource config)","https://peraturan.bpk.go.id/Search, https://peraturan.bpk.go.id/recent, https://peraturan.bpk.go.id/terbaru, https://peraturan.bpk.go.id/","None"
"ImprovedPeraturanScraper","EnhancedDocumentScraper","DocumentSource, LegalDocument","delay_min, delay_max, timeout, retries (for EnhancedDocumentScraper); request_delay, timeout, headers (from DocumentSource config)","https://peraturan.go.id/peraturan/list/category/..., https://peraturan.go.id/sitemap.xml, https://peraturan.go.id/sitemap_index.xml, https://peraturan.go.id/search?q=...","None"
"JdihPerpusnasApiScraper","Carbon\Carbon","LegalDocument","JDIH_PERPUSNAS_BEARER_TOKEN, JDIH_PERPUSNAS_X_API_KEY, JDIH_PERPUSNAS_BASE_URL (from config/services.php)","API: /list-artikel, /token (via Http::jdihPerpusnas())","None"
"KemenkoScraper","None (inherits from KemluTikScraper)","None (inherits from KemluTikScraper)","None (inherits from KemluTikScraper)","Inherits from KemluTikScraper (jdih.kemlu.go.id)","None"
"KomdigiScraper","None (inherits from KemluTikScraper)","None (inherits from KemluTikScraper)","None (inherits from KemluTikScraper)","Inherits from KemluTikScraper (jdih.kemlu.go.id), Http::legalDocsScraper()","None"
"SessionAwarePeraturanScraper","None","DocumentSource, LegalDocument","legal_documents.http_client.anti_detection (for random_delays, min_delay, max_delay)","https://peraturan.go.id (homepage, /common/dokumen/ln, /id/uu-no-1-tahun-2025, etc.)","None"
"TikEnhancedBpkScraper","EnhancedDocumentScraper, TikTermsService, DocumentClassifierService","DocumentSource, LegalDocument","delay_min, delay_max, timeout, retries (for EnhancedDocumentScraper); min_tik_score (from DocumentSource config)","https://peraturan.bpk.go.id/Search, https://peraturan.bpk.go.id/search?jenis=uu&tahun=...&q=...","None"
"KemluTikScraper","None","LegalDocument","None (inherits request_delay, timeout, headers from BaseScraper config)","https://jdih.kemlu.go.id/dokumen?search=..., https://jdih.kemlu.go.id (for PDF download)","Placeholder for OCR API integration (callOcrApi method)"
"","","","","",""
"Database Interaction Analysis","","","","",""
"Scraper Class","Models Created/Updated","Database Tables Affected","Saving Mechanism","Potential Data Conflicts","Migration Dependencies"
"All Scrapers (via BaseScraper)","LegalDocument, DocumentSource","legal_documents, document_sources","Direct model creation (LegalDocument::create())","Checksum (title, document_number, issue_date) prevents exact duplicates. Different extractions for same document could lead to duplicates.","create_legal_documents_table, create_document_sources_table, fix_legal_documents_schema"
"","","","","",""
"External Dependencies Analysis","","","","",""
"Scraper Class","Required Environment Variables","Config File Dependencies","Required DocumentSource Setup","API Keys/Tokens Needed","Hardcoded URLs/Endpoints"
"BpkScraper","None","None","Uses request_delay, timeout, headers from DocumentSource config.","None","https://peraturan.bpk.go.id (base), /Search, /recent, /terbaru, category URLs, search queries."
"ImprovedPeraturanScraper","None","cache (for 'peraturan_scraper_last_success_strategy')","Inherits config usage from BaseScraper.","None","https://peraturan.go.id (base), /peraturan/list/category/..., /sitemap.xml, /sitemap_index.xml, /search?q=..., specific search queries."
"JdihPerpusnasApiScraper","JDIH_PERPUSNAS_BEARER_TOKEN, JDIH_PERPUSNAS_X_API_KEY, JDIH_PERPUSNAS_BASE_URL","config/services.php (for jdihPerpusnas HTTP client)","Inherits config usage from BaseScraper.","JDIH_PERPUSNAS_BEARER_TOKEN, JDIH_PERPUSNAS_X_API_KEY","API: /list-artikel, /token (relative to base URL)."
"KemenkoScraper","None (inherits)","None (inherits)","Inherits from KemluTikScraper.","None","Inherits from KemluTikScraper. Specific search terms."
"KomdigiScraper","None (inherits)","None (inherits)","Inherits from KemluTikScraper. Uses this->source->base_url.","None","Inherits from KemluTikScraper. Specific category URLs, keywords."
"SessionAwarePeraturanScraper","None","config('legal_documents.http_client.anti_detection')","Inherits config usage from BaseScraper.","None","https://peraturan.go.id (base), /common/dokumen/ln, /id/uu-no-1-tahun-2025, etc."
"TikEnhancedBpkScraper","None","cache (for 'tik_bpk_scraper_last_success_strategy')","Uses min_tik_score from DocumentSource config. Inherits other config usage from BaseScraper.","None","https://peraturan.bpk.go.id (base), /Search, TIK category URLs, TIK search queries."
"KemluTikScraper","None","None","Inherits config usage from BaseScraper.","None","https://jdih.kemlu.go.id (base), /dokumen?search=..., storage_path('app/temp/'), placeholder for OCR API."
"","","","","",""
"Scraper Issues Analysis","","","","",""
"Scraper Class","Outdated Selectors/Endpoints","Hardcoded URLs/Endpoints Issues","Missing Error Handling","Rate Limiting Issues","Staleness/Update Status","Rating"
"BpkScraper","Uses specific XPath patterns and search queries, prone to breaking if site HTML changes.","Many hardcoded URLs for search and categories.","Good try-catch blocks for HTTP requests and general scraping, but specific selector failures might not be gracefully handled.","Uses sleep(2) and adaptiveDelay. Basic but present.","Code comments suggest recent updates.","NEEDS_TESTING"
"ImprovedPeraturanScraper","Uses specific XPath patterns and sitemap/category URLs, prone to breaking.","Many hardcoded URLs for categories, sitemaps, and search.","Good try-catch blocks. Uses makeRequestWithFallback.","Uses sleep(2) and adaptiveDelay.",""Improved" in name suggests newer version.","NEEDS_TESTING"
"JdihPerpusnasApiScraper","Uses API endpoints, less prone to breaking than HTML selectors, but API changes can still occur.","Relative API endpoints. Base URL configured via config/services.php.","Good try-catch blocks around API calls. Logs warnings for failed requests.","Uses sleep(1) between keyword searches.","API-based scrapers tend to be more stable.","LIKELY_WORKING"
"KemenkoScraper","Inherits from KemluTikScraper, so its core extraction logic is tied to jdih.kemlu.go.id's structure. Potential mismatch if Kemenko's site is different.","Inherits from KemluTikScraper. Uses specific search terms.","Inherits from KemluTikScraper.","Inherits from KemluTikScraper.","Extends KemluTikScraper which has a "FIX" comment.","PROBABLY_BROKEN"
"KomdigiScraper","Inherits from KemluTikScraper, so its core extraction logic is tied to jdih.kemlu.go.id's structure. Potential mismatch.","Inherits from KemluTikScraper. Uses this->source->base_url for category URLs. Specific keywords.","Inherits from KemluTikScraper.","Inherits from KemluTikScraper.","Extends KemluTikScraper which has a "FIX" comment.","PROBABLY_BROKEN"
"SessionAwarePeraturanScraper","Uses specific XPath patterns and URL structures for peraturan.go.id, prone to breaking.","Many hardcoded URLs for session establishment and direct document access.","Good try-catch blocks. Includes isLoginPage check.","Uses addRandomDelay which uses config values.","Designed for session handling, implies frequent updates might be needed.","NEEDS_TESTING"
"TikEnhancedBpkScraper","Inherits search logic from BpkScraper (which uses specific XPath patterns). Also uses TIK-focused search queries and categories.","Many hardcoded URLs for search and categories.","Good try-catch blocks.","Uses sleep(2) and adaptiveDelay. Includes logic to lower minTikScore if success rate is low.","TIK-focused logic suggests it's actively maintained for specific content.","NEEDS_TESTING"
"KemluTikScraper","Uses specific XPath patterns for jdih.kemlu.go.id. Has a "FIX" comment, indicating it's known to need updates.","Hardcoded search URLs for jdih.kemlu.go.id.","Good try-catch blocks. Includes placeholder for OCR API.","Uses sleep(2).",""FIX" comment is a strong indicator of staleness or ongoing issues.","PROBABLY_BROKEN"
"","","","","",""
"Redundancy and Overlap Analysis","","","","",""
"Scraper Class","Target Site","Overlap/Redundancy","Recommendation"
"BpkScraper","peraturan.bpk.go.id","Overlaps with TikEnhancedBpkScraper.","Remove if TikEnhancedBpkScraper fully subsumes its functionality and TIK focus is always desired."
"ImprovedPeraturanScraper","peraturan.go.id","Overlaps with SessionAwarePeraturanScraper.","Remove if SessionAwarePeraturanScraper is the preferred and more robust solution for peraturan.go.id."
"JdihPerpusnasApiScraper","JDIH Perpusnas API","None. Unique API-based scraper.","Keep."
"KemenkoScraper","JDIH Kemenko","Extends KemluTikScraper but targets a different site. Design flaw.","Refactor: Should not extend KemluTikScraper. Implement site-specific logic or use EnhancedDocumentScraper directly."
"KomdigiScraper","JDIH Komdigi","Extends KemluTikScraper but targets a different site. Design flaw.","Refactor: Should not extend KemluTikScraper. Implement site-specific logic or use EnhancedDocumentScraper directly."
"SessionAwarePeraturanScraper","peraturan.go.id","Overlaps with ImprovedPeraturanScraper.","Keep if session handling is critical for peraturan.go.id. More robust for this site."
"TikEnhancedBpkScraper","peraturan.bpk.go.id","Overlaps with BpkScraper. More specialized (TIK-focused).","Keep. Consider removing BpkScraper if this is the desired primary scraper for BPK."
"KemluTikScraper","jdih.kemlu.go.id","None (should be sole scraper for this site).","Keep."
"FixedPeraturanScraper (Factory Entry)","N/A","Mapped in ScraperFactory but class file does not exist.","Remove this entry from ScraperFactory."
"TikEnhancedBpkScraper (File)","N/A","Exists as a file but is not registered in ScraperFactory.","Register in ScraperFactory if intended for use."
"","","","","",""
"Code Quality Analysis","","","","",""
"Scraper Class","Error Handling Completeness","Logging Implementation","Rate Limiting and Politeness","Code Documentation","Laravel/PHP Best Practices","Refactoring Needed"
"BpkScraper","Good try-catch blocks for main scrape and HTTP requests. Specific selector failures might not be explicitly logged.","Extensive logging to 'legal-documents' and 'legal-documents-errors' channels.","Uses sleep(2) and adaptiveDelay. Basic but present.","Class and method PHPDoc comments present, some private helper methods lack detailed comments.","Generally follows Laravel conventions (Facades, Models, Services).","Minor refactoring for better modularity of helper methods."
"ImprovedPeraturanScraper","Good try-catch blocks. Uses makeRequestWithFallback for resilience. Logs errors.","Extensive logging to 'legal-documents' and 'legal-documents-errors' channels.","Uses sleep(2) and adaptiveDelay.","Class and method PHPDoc comments present.","Generally follows Laravel conventions. Uses cache().","Minor refactoring for better modularity of helper methods."
"JdihPerpusnasApiScraper","Good try-catch blocks around API calls. Logs warnings for failed requests.","Good logging to 'legal-documents' and 'legal-documents-errors' channels.","Uses sleep(1) between keyword searches. Basic but appropriate for API.","Good PHPDoc comments for class and methods.","Uses Laravel's Http facade with custom client configuration. Uses Carbon. Good.","None apparent."
"KemenkoScraper","Inherits from KemluTikScraper.","Inherits from KemluTikScraper.","Inherits from KemluTikScraper.","Limited, especially given its problematic inheritance.","Violates principle of least surprise by extending a scraper for a different site.","High priority refactoring due to incorrect inheritance. Should extend BaseScraper and implement its own site-specific logic."
"KomdigiScraper","Inherits from KemluTikScraper.","Inherits from KemluTikScraper.","Inherits from KemluTikScraper.","Limited, especially given its problematic inheritance.","Violates principle of least surprise by extending a scraper for a different site.","High priority refactoring due to incorrect inheritance. Should extend BaseScraper and implement its own site-specific logic."
"SessionAwarePeraturanScraper","Good try-catch blocks. Explicitly checks for successful HTTP responses and login page redirects.","Extensive logging to 'legal-documents' and 'legal-documents-errors' channels.","Uses addRandomDelay which uses configurable delays. Good.","Good PHPDoc comments.","Generally follows Laravel conventions. Uses Http facade with custom client.","None apparent, but the extractDocumentData method is a placeholder, which needs to be implemented."
"TikEnhancedBpkScraper","Good try-catch blocks. Logs errors.","Extensive logging to 'legal-documents' and 'legal-documents-errors' channels.","Uses sleep(2) and adaptiveDelay. Includes adaptive logic for minTikScore. Good.","Good PHPDoc comments.","Generally follows Laravel conventions. Uses cache().","Minor refactoring for better modularity of helper methods."
"KemluTikScraper","Good try-catch blocks. Logs errors. Includes placeholder for OCR API.","Good logging.","Uses sleep(2).","Good PHPDoc comments, but the "FIX" comment indicates known issues.","Generally follows Laravel conventions.","High priority refactoring to address the "FIX" comment and implement the OCR API integration."
"","","","","",""
"TIK Focus Analysis","","","","",""
"Scraper Class","TIK-Focused","TIK Filtering Capabilities","General Scraper for TIK Enhancement","Effectiveness of Approach"
"BpkScraper","No (general BPK scraper)","No (but finds TIK content via search queries)","Yes (already done by TikEnhancedBpkScraper)","General purpose, good for broad collection. TIK analysis applied post-scrape."
"ImprovedPeraturanScraper","No (general peraturan.go.id scraper)","No (but finds TIK content via search queries)","Yes","General purpose, good for broad collection. TIK analysis applied post-scrape."
"JdihPerpusnasApiScraper","Yes (keywords explicitly target TIK-related terms)","Implicitly, by searching with TIK keywords. No explicit minTikScore or isTikRelated.","N/A (already designed for TIK-relevant documents via API)","Specialized API-based approach is effective for targeted TIK content."
"KemenkoScraper","Yes (has its own $tikKeywords and digitalEconomyTerms)","Inherits isTikRelated from KemluTikScraper.","N/A (already specialized for TIK content within Kemenko's domain)","Specialized approach, but flawed due to incorrect inheritance. Refactoring needed."
"KomdigiScraper","Yes (has its own $tikKeywords and keywords)","Inherits isTikRelated from KemluTikScraper.","N/A (already specialized for TIK content within Komdigi's domain)","Specialized approach, but flawed due to incorrect inheritance. Refactoring needed."
"SessionAwarePeraturanScraper","No (general peraturan.go.id scraper with session handling)","No explicit TIK filtering.","Yes","General purpose, could be enhanced for TIK analysis post-scrape."
"TikEnhancedBpkScraper","Yes (explicitly designed for TIK content from BPK)","Yes (uses applyTikFiltering, TikTermsService, DocumentClassifierService)","N/A (is the TIK-enhanced version)","Specialized approach is effective for precise TIK content targeting and efficient processing."
"KemluTikScraper","Yes (explicitly designed for TIK content from Kemlu)","Yes (uses isTikRelated and findTikKeywords)","N/A (already specialized for TIK content)","Specialized approach is effective for targeted TIK content, but needs addressing of "FIX" comment."
"Overall Effectiveness:","","","","Specialized scraper approach (e.g., TikEnhancedBpkScraper) is more effective for TIK content due to precise targeting and integrated filtering. General scrapers should focus on broad data collection, with TIK analysis applied as a separate processing step using TikTermsService and DocumentClassifierService."
"","","","",""
"Testing Infrastructure Analysis","","",""
"Category","Finding","Recommendation"
"Dedicated Test Commands","The following scrapers have dedicated test commands: BpkScraper (scraper:test-bpk), KemluTikScraper (scraper:test-kemlu), TikEnhancedBpkScraper (scraper:test-tik-bpk).","Create dedicated test commands for other scrapers to standardize testing."
"Test Coverage Gaps","The following scrapers lack dedicated test commands: JdihPerpusnasApiScraper, ImprovedPeraturanScraper, SessionAwarePeraturanScraper, KemenkoScraper, KomdigiScraper, MultiSourceLegalScraper.","Prioritize creating tests for JdihPerpusnasApiScraper (API-based) and the peraturan.go.id scrapers. KemenkoScraper and KomdigiScraper need refactoring before testing."
"Safe Testing","All scrapers with dedicated test commands can be tested safely using the --dry-run flag, which prevents database writes. The generic 'legal-docs:scrape' command's --test-mode flag also allows for safe testing.","Enforce the use of --dry-run or --test-mode for all manual and automated testing to prevent side effects."
"Recommended Testing Order (Least to Most Risky)","1. JdihPerpusnasApiScraper (API-based, most stable) -> 2. TikEnhancedBpkScraper / BpkScraper (dedicated tests) -> 3. ImprovedPeraturanScraper / SessionAwarePeraturanScraper (no dedicated tests) -> 4. KemluTikScraper / KemenkoScraper / KomdigiScraper (known issues/design flaws).","Follow this order to identify issues, starting with the most reliable components first. Fix known broken scrapers before extensive testing."
"Missing Test Utilities","The testing infrastructure lacks: 1) Dedicated test commands for all scrapers, 2) HTTP request mocking (e.g., VCR) for isolating tests from live sites, 3) HTML/API response fixtures for deterministic tests, 4) A unified test runner script.","Implement a mocking layer (like PHP-VCR) and use test fixtures. Create a generic scraper test command or individual commands for the remaining scrapers."
"","","","",""
"Application Integration Analysis","","",""
"Integration Point","Finding","Recommendation"
"Invocation Method","Scrapers are invoked exclusively through Artisan console commands (e.g., 'legal-docs:scrape'). There is no integration with web routes, API endpoints, or the admin panel for triggering scrapes.","For better usability, add a 'Scrape Sources' button in the admin panel that dispatches ScrapeDocumentsJob for selected sources. This requires a new controller method and route."
"Queue Integration","Scraping is properly integrated with Laravel's queue system via the ScrapeDocumentsJob. This ensures scraping happens asynchronously and robustly, with configured retries and timeouts.","Keep this architecture. Consider adding a dedicated monitoring UI for queued jobs (e.g., Laravel Horizon) to improve visibility into the scraping process."
"Caching Usage","Direct usage of the Cache facade by scrapers is not found. The previous analysis mentioning caching strategies might be outdated or refer to a dependency's internal caching.","Re-evaluate the need for caching successful requests or strategies. If performance is an issue, implementing caching for scraper results or frequently accessed data could be beneficial."
"Event/Listener Integration","No custom Event/Listener integration is found for the scraping process (EventServiceProvider is missing). The system does not use events like 'ScrapingCompleted'.","Introduce events like 'ScrapingCompleted' or 'DocumentFound'. This would decouple post-scraping actions (like indexing, notifications) from the job itself, making the system more modular."
"API Endpoints","There are no API endpoints for triggering or monitoring scraping jobs.","If external systems need to trigger scrapes, create a secure, token-protected API endpoint. For now, this is not a priority as all operations are internal."
"Admin Panel Integration","The admin panel provides a CRUD interface for the 'legal_documents' table (the output of scrapers), but it completely lacks controls for initiating, scheduling, or monitoring the scraping jobs themselves.","High priority: Add a 'Scraper Management' section to the admin panel. This should list all document sources, show their status/last-scraped time, and include a button to trigger a new scrape (dispatch the job)."
"","","","",""
"Final Recommendations","","",""
"Recommendation Area","Specific Action","Justification","Priority"
"Deprecation/Removal","Remove 'FixedPeraturanScraper' from ScraperFactory.","The class file does not exist, making the factory entry dead code.","High"
"Deprecation/Removal","Deprecate and remove 'BpkScraper'.","Its functionality is subsumed by the more advanced 'TikEnhancedBpkScraper'.","Medium"
"Deprecation/Removal","Deprecate and remove 'ImprovedPeraturanScraper'.","Its functionality is subsumed by the more robust 'SessionAwarePeraturanScraper'.","Medium"
"Consolidation","Merge 'BpkScraper' features into 'TikEnhancedBpkScraper'.","Create a single, definitive scraper for peraturan.bpk.go.id.","Medium"
"Consolidation","Merge 'ImprovedPeraturanScraper' features into 'SessionAwarePeraturanScraper'.","Create a single, definitive scraper for peraturan.go.id.","Medium"
"Refactoring","Refactor 'KemenkoScraper' and 'KomdigiScraper' to extend 'BaseScraper' instead of 'KemluTikScraper'.","The current inheritance is a design flaw, linking them to an unrelated site's logic.","High"
"Testing Priority","1. KemluTikScraper, 2. JdihPerpusnasApiScraper, 3. TikEnhancedBpkScraper / SessionAwarePeraturanScraper, 4. KemenkoScraper / KomdigiScraper (post-refactor).","Test the most critical/broken scrapers first, followed by stable, then core, and finally the refactored scrapers.","High"
"Enhancement vs Replacement","Enhance: KemluTikScraper (fix & add OCR), TikEnhancedBpkScraper, SessionAwarePeraturanScraper.","These are core, advanced scrapers that form a good foundation for future work.","High"
"Enhancement vs Replacement","Replace: KemenkoScraper, KomdigiScraper, BpkScraper, ImprovedPeraturanScraper.","These scrapers are either fundamentally flawed or redundant.","Medium"
"New Functionality: Admin UI","Build an admin panel section to manage scrapers: trigger jobs, view status, and see logs.","The current system is console-only, which is a major usability gap for non-developers.","Critical"
"New Functionality: Testing","Implement a testing utility for mocking HTTP requests (e.g., PHP-VCR) and use data fixtures.","This will make tests faster, deterministic, and isolated from network/external site issues.","High"
"New Functionality: OCR","Implement the placeholder OCR API integration in 'KemluTikScraper'.","This is a key feature for extracting text from PDF documents that is currently missing.","High"
"","","","",""
"Scraper Optimization Roadmap","","",""
"Phase","Action","Details","Risk"
"1. Quick Wins","Fix KemluTikScraper, Remove dead factory entries, Register existing scrapers.","Address immediate bugs and inconsistencies for quick stability gains.","Low"
"2. Medium-Term","Refactor Kemenko/Komdigi scrapers, Consolidate BPK and Peraturan.go.id scrapers, Build Admin UI for scraping.","Improve code quality, reduce redundancy, and provide critical usability features.","Medium"
"3. Long-Term","Implement robust testing (mocking/fixtures), Introduce event-driven architecture, Implement real OCR service.","Invest in architectural improvements for long-term maintainability, scalability, and feature completeness.","High"
"Order of Operations","1. Quick Wins -> 2. Admin UI -> 3. Consolidation/Refactoring -> 4. Long-Term Architecture","Prioritize stabilizing the system, then providing user value, then major code cleanup, and finally long-term strategic changes.","N/A"
"","","","",""
"BPK Advanced Search Integration Analysis","","",""
"Area","Analysis","Recommendation"
"Target Scrapers","TikEnhancedBpkScraper is the primary candidate. BpkScraper should be deprecated, not enhanced.","Focus all new BPK-related development on the more advanced, TIK-focused scraper."
"Integration Strategy","Enhance the 'getDocumentUrls' or 'scrape' method in TikEnhancedBpkScraper to dynamically construct URLs with the new entity filters based on source configuration.","This allows for flexible and powerful searches without hardcoding URLs."
"Potential Conflicts","The new search pattern might conflict with the existing keyword-based search or category crawling. The TIK-filtering logic must be compatible with the new search results.","Design the scraper to use either the advanced search OR the existing methods, not both simultaneously. Ensure TIK scoring can be applied to results from the new endpoint."
"Implementation Complexity","Assessed as 'Medium'. Requires config changes, new URL construction logic, and potentially updated result parsing logic.","Allocate sufficient time for implementation and thorough testing to manage the complexity and avoid regressions."